<project default="compile">

  <property environment="env"/> <!-- load the environment variables -->
  <property name="projectName" value="csil_status" />
  <property name="packageName" value="com.nguyenmp.csil" />
  <property name="mainClass" value="${packageName}.Topper" />
  <path id="project.class.path">
    <pathelement location="build"/>
    <pathelement location="libs/jsch-0.1.50.jar"/>
    <pathelement location="libs/sqlite-jdbc-3.7.15-M1.jar"/>
  </path>

  <target name="compile" description="compile my code">
    <mkdir dir="build" />
    <javac srcdir="src" destdir="build" debug="true" debuglevel="lines,source"
	   includeantruntime="false" >
      <compilerarg value="-Xlint"/>
      <classpath refid="project.class.path" />
    </javac>
  </target>



  <target name="run" depends="compile" description="runs the class ${mainClass}" >
    <java classname="${mainClass}">
      <classpath refid="project.class.path" />
        <arg value="./csil.db" />
    </java>
  </target>


  <target name="init" depends="compile" description="initializes the DB with host file ip addresses and tests each ip address for connectivity" >
    <java classname="${packageName}.DBInitializer" >
        <arg value="./csil.db" />
        <classpath refid="project.class.path" />
    </java>
  </target>


  <target name="initECE" depends="compile" description="initializes the DB with host file ip addresses and tests each ip address for connectivity" >
    <java classname="${packageName}.DBInitializerECE" >
        <arg value="./csil.db" />
        <classpath refid="project.class.path" />
    </java>
  </target>

  <target name="test" depends="compile" description="run junit tests">

    <junit haltonerror="no" haltonfailure="no">
      <classpath refid="project.class.path" />

      <batchtest fork="yes">
        <fileset dir="src">
          <!-- this will pick up every class with a name ending in Test -->
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>

      <formatter type="plain" usefile="false" />

    </junit>
  </target>

  <target name="clean" description="delete unnecessary files and directories">
    <delete dir="build" failonerror="false" verbose="true" />
    <mkdir dir="build" />
  </target>


</project>

