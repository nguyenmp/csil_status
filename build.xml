<project default="compile">

  <property environment="env"/> <!-- load the environment variables -->
  <property name="projectName" value="csil_status" />
  <property name="packageName" value="com.nguyenmp.csil" />
  <property name="javadocDest" value="javadoc"/>
  <property name="version" value="0.0.1"/>
  <path id="project.class.path">
    <pathelement location="build"/>
    <pathelement location="libs/jsch-0.1.50.jar"/>
    <pathelement location="libs/sqlite-jdbc-3.7.15-M1.jar"/>
  </path>

  <target name="compile" description="compile my code">
    <mkdir dir="build" />
    <javac srcdir="src" destdir="build" debug="true" debuglevel="lines,source"
	   includeantruntime="false" >
      <compilerarg value="-Xlint"/>
      <classpath refid="project.class.path" />
    </javac>
  </target>



  <target name="topper" depends="compile" description="runs the class Topper" >
    <java classname="${packageName}.Topper">
      <classpath refid="project.class.path" />
    </java>
  </target>


  <target name="who" depends="compile" description="runs the class WhoIsHere" >
    <java classname="${packageName}.WhoIsHere">
      <classpath refid="project.class.path" />
    </java>
  </target>


  <target name="init" depends="compile" description="initializes the DB" >
    <java classname="${packageName}.DBInitializer" >
        <classpath refid="project.class.path" />
    </java>
  </target>


  <target name="test" depends="compile" description="run junit tests">

    <junit haltonerror="no" haltonfailure="no">
      <classpath refid="project.class.path" />

      <batchtest fork="yes">
        <fileset dir="src">
          <!-- this will pick up every class with a name ending in Test -->
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>

      <formatter type="plain" usefile="false" />

    </junit>
  </target>

  <target name="loadavg" depends="compile" description="runs the class LoadAvg" >
    <java classname="${packageName}.LoadAvgRunner">
      <classpath refid="project.class.path" />
    </java>
  </target>


  <target name="clean" description="delete unnecessary files and directories">
    <delete dir="build" failonerror="false" verbose="true" />
    <delete dir="dist" failonerror="false" verbose="true" />
    <delete dir="javadoc" failonerror="false" verbose="true" />
    <delete failonerror="false" verbose="true" >
      <fileset dir="." includes="*.db" />
    </delete>
  </target>

  <target name="javadoc" depends="compile" description="generate Javadoc documentation">
    <delete dir="javadoc" quiet="true" />
    <javadoc destdir="javadoc" author="true" version="true" use="true" >
      <classpath>
        <fileset dir="libs"/>
      </classpath>
      <fileset dir="src" includes="**/*.java"/>
    </javadoc>
  </target>

  <target name="rebuild" depends="clean, compile"/>

  <target name="dist" depends="rebuild, javadoc" description="generates the jar file for distribution">
    <jar jarfile="dist/csil-status-${version}-javadocs.jar">
      <fileset dir="javadoc" />
    </jar>
    <jar jarfile="dist/csil-status-${version}-sources.jar">
      <fileset dir="src" />
    </jar>
    <jar jarfile="dist/csil-status-${version}.jar">
      <fileset dir="build" />
      <archives>
        <zips>
          <fileset dir="libs" />
        </zips>
      </archives>
    </jar>
  </target>


</project>

